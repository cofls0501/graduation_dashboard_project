{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AILab\\\\Downloads\\\\graduation_dashboard_project\\\\src\\\\components\\\\DemographicChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DemographicChart() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + '/data/demographic_predicted.csv').then(response => response.text()).then(csv => {\n      Papa.parse(csv, {\n        header: true,\n        dynamicTyping: true,\n        complete: result => setData(result.data)\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      margin: {\n        top: 30,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"pop_0_14\",\n        stroke: \"#8884d8\",\n        name: \"0-14\\uC138\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"pop_15_64\",\n        stroke: \"#82ca9d\",\n        name: \"15-64\\uC138\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"pop_65_plus\",\n        stroke: \"#ffc658\",\n        name: \"65\\uC138 \\uC774\\uC0C1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(DemographicChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = DemographicChart;\nvar _c;\n$RefreshReg$(_c, \"DemographicChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Papa","jsxDEV","_jsxDEV","DemographicChart","_s","data","setData","fetch","process","env","PUBLIC_URL","then","response","text","csv","parse","header","dynamicTyping","complete","result","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","name","_c","$RefreshReg$"],"sources":["C:/Users/AILab/Downloads/graduation_dashboard_project/src/components/DemographicChart.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Papa from 'papaparse';\n\nexport default function DemographicChart() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + '/data/demographic_predicted.csv')\n      .then(response => response.text())\n      .then(csv => {\n        Papa.parse(csv, {\n          header: true,\n          dynamicTyping: true,\n          complete: (result) => setData(result.data),\n        });\n      });\n  }, []);\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={data} margin={{ top: 30, right: 30, left: 0, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"pop_0_14\" stroke=\"#8884d8\" name=\"0-14세\" />\n        <Line type=\"monotone\" dataKey=\"pop_15_64\" stroke=\"#82ca9d\" name=\"15-64세\" />\n        <Line type=\"monotone\" dataKey=\"pop_65_plus\" stroke=\"#ffc658\" name=\"65세 이상\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}