{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AILab\\\\Downloads\\\\graduation_dashboard_project\\\\src\\\\components\\\\FundPortChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FundPortChart() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + '/data/fund_port_predicted.csv').then(response => response.text()).then(csv => {\n      Papa.parse(csv, {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n        complete: result => {\n          // 데이터를 year별로 묶고 category를 키로 바꿈\n          const grouped = {};\n          result.data.forEach(row => {\n            if (!grouped[row.year]) grouped[row.year] = {\n              year: row.year\n            };\n            grouped[row.year][row.category] = row.ratio;\n          });\n          setData(Object.values(grouped));\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(AreaChart, {\n      data: data,\n      stackOffset: \"expand\",\n      margin: {\n        top: 30,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"welfare\",\n        stackId: \"1\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\",\n        name: \"\\uBCF5\\uC9C0\\uBD80\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"finance\",\n        stackId: \"1\",\n        stroke: \"#82ca9d\",\n        fill: \"#82ca9d\",\n        name: \"\\uAE08\\uC735\\uBD80\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"others\",\n        stackId: \"1\",\n        stroke: \"#ffc658\",\n        fill: \"#ffc658\",\n        name: \"\\uAE30\\uD0C0\\uBD80\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(FundPortChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = FundPortChart;\nvar _c;\n$RefreshReg$(_c, \"FundPortChart\");","map":{"version":3,"names":["React","useEffect","useState","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Papa","jsxDEV","_jsxDEV","FundPortChart","_s","data","setData","fetch","process","env","PUBLIC_URL","then","response","text","csv","parse","header","dynamicTyping","skipEmptyLines","complete","result","grouped","forEach","row","year","category","ratio","Object","values","width","height","children","stackOffset","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stackId","stroke","fill","name","_c","$RefreshReg$"],"sources":["C:/Users/AILab/Downloads/graduation_dashboard_project/src/components/FundPortChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport Papa from 'papaparse';\n\nexport default function FundPortChart() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + '/data/fund_port_predicted.csv')\n      .then(response => response.text())\n      .then(csv => {\n        Papa.parse(csv, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n          complete: (result) => {\n            // 데이터를 year별로 묶고 category를 키로 바꿈\n            const grouped = {};\n            result.data.forEach(row => {\n              if (!grouped[row.year]) grouped[row.year] = { year: row.year };\n              grouped[row.year][row.category] = row.ratio;\n            });\n            setData(Object.values(grouped));\n          },\n        });\n      });\n  }, []);\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <AreaChart data={data} stackOffset=\"expand\" margin={{ top: 30, right: 30, left: 0, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Area type=\"monotone\" dataKey=\"welfare\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" name=\"복지부문\" />\n        <Area type=\"monotone\" dataKey=\"finance\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" name=\"금융부문\" />\n        <Area type=\"monotone\" dataKey=\"others\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" name=\"기타부문\" />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAC7E,UAAU;AACjB,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdiB,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,+BAA+B,CAAC,CAC5DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,GAAG,IAAI;MACXd,IAAI,CAACe,KAAK,CAACD,GAAG,EAAE;QACdE,MAAM,EAAE,IAAI;QACZC,aAAa,EAAE,IAAI;QACnBC,cAAc,EAAE,IAAI;QACpBC,QAAQ,EAAGC,MAAM,IAAK;UACpB;UACA,MAAMC,OAAO,GAAG,CAAC,CAAC;UAClBD,MAAM,CAACf,IAAI,CAACiB,OAAO,CAACC,GAAG,IAAI;YACzB,IAAI,CAACF,OAAO,CAACE,GAAG,CAACC,IAAI,CAAC,EAAEH,OAAO,CAACE,GAAG,CAACC,IAAI,CAAC,GAAG;cAAEA,IAAI,EAAED,GAAG,CAACC;YAAK,CAAC;YAC9DH,OAAO,CAACE,GAAG,CAACC,IAAI,CAAC,CAACD,GAAG,CAACE,QAAQ,CAAC,GAAGF,GAAG,CAACG,KAAK;UAC7C,CAAC,CAAC;UACFpB,OAAO,CAACqB,MAAM,CAACC,MAAM,CAACP,OAAO,CAAC,CAAC;QACjC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA,CAACH,mBAAmB;IAAC8B,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5C7B,OAAA,CAACV,SAAS;MAACa,IAAI,EAAEA,IAAK;MAAC2B,WAAW,EAAC,QAAQ;MAACC,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAN,QAAA,gBAC7F7B,OAAA,CAACN,aAAa;QAAC0C,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCxC,OAAA,CAACR,KAAK;QAACiD,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBxC,OAAA,CAACP,KAAK;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTxC,OAAA,CAACL,OAAO;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXxC,OAAA,CAACJ,MAAM;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVxC,OAAA,CAACT,IAAI;QAACmD,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,SAAS;QAACE,OAAO,EAAC,GAAG;QAACC,MAAM,EAAC,SAAS;QAACC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGxC,OAAA,CAACT,IAAI;QAACmD,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,SAAS;QAACE,OAAO,EAAC,GAAG;QAACC,MAAM,EAAC,SAAS;QAACC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGxC,OAAA,CAACT,IAAI;QAACmD,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,QAAQ;QAACE,OAAO,EAAC,GAAG;QAACC,MAAM,EAAC,SAAS;QAACC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B;AAACtC,EAAA,CAtCuBD,aAAa;AAAA8C,EAAA,GAAb9C,aAAa;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}